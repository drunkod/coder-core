# action.yml
name: 'Extract rootfs'
description: 'Extracts the root filesystem of a Docker image and saves it as a gzip file'
inputs:
  image_name:
    description: 'The name of the Docker image to extract'
    required: true
  output_file:
    description: 'The name of the output file without extension'
    required: true
runs:
  using: 'composite'
  steps:
    - name: 'Run extract-rootfs.sh'
      shell: bash
      run: |
        #!/bin/bash
        # Assign the arguments to variables
        image_name=ghcr.io/drunkod/coder-core:restreamer@sha256:b45ac3460a20e9e5db10ab175f56e84efd885da06513bcb6b5f422307d62aaa5
        output_file=${{ env.OUTPUT_FILE }}

        # Create a temporary container from the image
        container_id=$(docker create $image_name)

        # Export the container's filesystem to a tar file
        docker export $container_id > $output_file.tar

        # Remove the temporary container
        docker rm $container_id

        # Compress the tar file into gzip format
        gzip -f $output_file.tar

        # Print a success message
        echo "The rootfs of $image_name has been extracted to ${output_file}.tar.gz"
